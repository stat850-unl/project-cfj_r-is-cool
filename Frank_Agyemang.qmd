---
title: "John Mensah_FIFA World Cup Analysis"
format: html
editor: visual
---

```{r}
library(tidyverse)
fifa_data <- read.csv("players_20.csv")

```

## The interrelationship among players' individual ratings.

```{r}
#player_rate <- fifa_data %>% select(, 45:78)

#player_mean.rate <- data.frame(attacking = rowMeans(player_rate[, 1:5]),
                               #skill = rowMeans(player_rate[, 6:10]),
                               #movement = rowMeans(player_rate[, 11:15]),
                               #power = rowMeans(player_rate[, 16:20]),
                               #mentality = rowMeans(player_rate[, 17:26]),
                               #defending = rowMeans(player_rate[, 27:29]))
player_ranking <- fifa_data %>% select(,17,32:37)

library(ggplot2)
#install.packages("ggcorrplot")
library(ggcorrplot)

  
# Computing correlation matrix
player_rate <- na.omit(player_rate)
correlation_matrix <- round(cor(player_rate),3)

  
# Computing correlation matrix with p-values
corrp.mat <- cor_pmat(player_rate)
  
# Adding correlation significance level
ggcorrplot(correlation_matrix, hc.order =TRUE, type ="lower", 
           p.mat = corrp.mat, lab = T) + theme_classic() + ylab("") + xlab("")

```

```{r}
ggplot(player_rate, mapping = aes(x = shooting)) + geom_histogram()
```

## How do these individual player ratings contribute to the overall rating of the player?

```{r}
library(glmmTMB)
library(MuMIn)
library(DHARMa)
library(broom.mixed)


player_mean.rate$overall.rating <- fifa_data$overall
player_mean.rate$nationality <- fifa_data$nationality
hist(player_mean.rate$overall.rating)

mod <- glmmTMB(overall.rating ~ attacking + skill + movement + power + mentality + defending+ (1|nationality), family=gaussian(), player_mean.rate)
summary(mod)


res = simulateResiduals(mod)
plot(res)

options(na.action = "na.fail")
dd <- dredge(mod)
tt = data.frame(dd)
subset(dd, delta < 4)

summary(model.avg(dd))
mod1 <- get.models(dd, 1)[[1]]
summary(mod1)


```

```{r}
 mod_vars = all.vars( formula(mod1) )[-1] 

preddat_fun = function(data, allvars, var) {
     sums = summarise_at(data, 
                         vars( one_of(allvars), -one_of(var) ), 
                         median) 
     cbind( select_at(data, var), sums)
}

head( preddat_fun(player_mean.rate, mod_vars, "attacking") )

pred_dats = mod_vars %>%
     set_names() %>%
     map( ~preddat_fun(player_mean.rate, mod_vars, .x) )
str(pred_dats)

head( augment(mod1, newdata = pred_dats[[1]], se_fit = TRUE))

preds = pred_dats %>%
     map(~augment(mod1, newdata = .x, se_fit = TRUE) ) %>%
     map(~mutate(.x, 
                 lower = .fitted - 2*.se.fit,
                 upper = .fitted + 2*.se.fit,
                 pred = .fitted ) )

str(preds$attacking)
preds <- preds[-6]
ggplot(data = preds$attacking, aes(x = attacking, y = pred) ) +
     geom_line(size = 1) +  geom_point() +
     geom_ribbon(aes(ymin = lower, ymax = upper), alpha = .25, color = "blue", fill="blue") +
     geom_rug(sides = "b") +
     theme_classic(base_size = 10) +
     labs(x = "Players attacking score",
          y = "Overall rating") 

xlabs = c("Player's attacking rating (%)", 
          "Player's defending rating (%)",
          "Player's mentality rating (%)", 
          "Player's power rating (%)",
          "Players's skill rating (%)")

pred_plot = function(data, variable, xlab) {
     ggplot(data, aes(x = .data[[variable]], y = pred) ) +
          geom_line(size = 1) +
          geom_ribbon(aes(ymin = lower, ymax = upper), alpha = .25) +
          geom_rug(sides = "b") +
          theme_classic(base_size = 10) +
          labs(x = xlab,
               y = "Overall rating (%)") 
}

pred_plot(preds[[1]], mod_vars[1], xlabs[1])


mod_vars1 = all.vars( formula(mod1) )[c(-1,-7)] 

all_plots = pmap( list(preds, mod_vars1, xlabs), pred_plot)
all_plots

cowplot::plot_grid(plotlist = all_plots,
          labels = "AUTO",
          align = "hv")


```

Loading additional libraries

```{r}
library(datasets)
library(tidyr)
library(ggplot2)
library(skimr)
library(dplyr)
library(plyr)
library(linearModel)
library(GGally)
library(corrplot)
library(ggpubr)
library(broom)
#library(tidyverse)
library(cowplot)
library(car)

```

Reading in the dataset

```{r}
football_data <- read.csv("players_20.csv")
skim(football_data)

```

The skim function in R gives a summary of the data. The difference between the skim function and summary stems from the fact that the skim function provides more details about the data than the summary function.

Looking at the output from the skim function tells me whether I may need to do some data clearing with some of the variables of interest.

Note that it groups the variables by data type and that is helpful with the type of analysis we make.

```{r}

summary(football_data)
```

```{r}
library(dplyr)
football_data_sub <- football_data %>%
  select(short_name,age,height_cm, weight_kg,overall, wage_eur,player_positions,attacking_crossing,attacking_heading_accuracy,attacking_short_passing,attacking_volleys,attacking_finishing)

```

Analyzing the distribution of the variables selected

```{r}
ggplot(football_data_sub, aes(age)) + 
  geom_bar(fill = "yellow" , color = "black")+
  scale_x_binned()
```

From the plot it can be observed that majority of the players are around the age 24years.

We could use this information to determine the probability of a player been called to the world given his age.

```{r}
age_frequency <- count(football_data_sub, "age")
age_frequency <- count(football_data_sub, "age") %>%
  mutate(probability = age_frequency$freq/length(football_data_sub$age))
age_frequency

par(mar = c(1, 1, 1,1))
plot(age_frequency$age,age_frequency$probability, col = "black", xlab = "age",ylab = "prob")

```

Analyzing the distribution of the height variable

```{r}
par(mar = c(1, 1, 1,1))
norm_height <- log(football_data_sub$height_cm)
norm_weight <- log(football_data_sub$weight_kg)
plot(norm_height,norm_weight, col="blue")
abline(lm(norm_weight~norm_height))
correlation <- cor(norm_height,norm_weight)
```

Exploratory analysis of wage_eur

```{r}
min(football_data_sub$wage_eur)
max(football_data_sub$wage_eur)
wage <- football_data_sub$wage_eur
wage <- wage[wage > 0]
wage
min(wage)
max(wage)
var(wage)
sd(wage)
mean(wage)

football_data_sub1 <- subset(football_data_sub, select = -c(short_name,player_positions))
pairs(football_data_sub1, pch = 18, col = "black")
hist(wage,
     col="grey",
     border="black",
     prob = TRUE)

lines(density(wage,adjust = 2),
      lwd = 1,
      col = "black")
```

Below are correlation plots to determine which variables should be selected for regression analysis.

```{r}
football_data_sub %>% 
  select(age:wage_eur,attacking_crossing:attacking_finishing) %>% 
  ggpairs()
```

Does a player's Age and Weight affect a player's attacking finishing?

```{r}
attacker_finish <- football_data_sub%>%
  select(age,weight_kg,attacking_finishing)

```

corelation plots

The spread of data shows that there might not be a strong correlation between age and attacking finishing. To confirm or refute this, we check for its correlation coefficient.

The plot and correlation coefficient shows that age has a weak positive correlation with attackers finishing.

```{r}
plot(attacker_finish$age, attacker_finish$attacking_finishing, pch = 19, col = "blue")

abline(lm(attacker_finish$attacking_finishing ~ attacker_finish$age), col = "black", lwd = 3)
cor(attacker_finish$age, attacker_finish$attacking_finishing)

```

But weight has a negative correlation on attacking finishing. This seems plausible because players who weigh a lot in football tend not to have speed and that impacts their attacking skills negatively. Nevertheless, there are players who still have accurate attacking finishing though they weigh above the average.

```{r}
plot(attacker_finish$weight_kg, attacker_finish$attacking_finishing, pch = 19, col = "blue")
abline(lm(attacker_finish$attacking_finishing ~ attacker_finish$weight_kg), col = "black", lwd = 3)
cor(attacker_finish$weight_kg, attacker_finish$attacking_finishing)

```

The second correlation plots also shows that weight has a negative correlation with an attackers finishing .

This is also plausible because players who weigh more are not able to run faster and hence are not better attackers. The heavier a player becomes to more negative it affects his finishing.

```{r}
attacking_finish_model_1<-lm(attacker_finish$attacking_finishing ~ attacker_finish$age + attacker_finish$weight_kg, data = attacker_finish)
```

Checking for interaction using \*

```{r}
attacking_finish_model_2<-lm(attacker_finish$attacking_finishing ~ attacker_finish$age * attacker_finish$weight_kg, data = attacker_finish)

summary(attacking_finish_model_2)
```

Now lets's check for collinearity using vif()

The values in our result is greater than 5. Therefore there is a problem. We have to center and redo the model.

```{r}
vif(attacking_finish_model_2)
```

Redoing the model and Standardizing the data

```{r}
stand <- attacker_finish %>% 
  mutate(stAge=age - mean(age)) %>% 
  mutate(stWeight_kg=weight_kg-mean(weight_kg))
```

Making a new model

```{r}
attacking_finish_model_3  <- lm(stand$attacking_finishing ~ stand$stAge * stand$stWeight_kg, data = stand)

summary(attacking_finish_model_3)
```

Model Selection

```{# {r}
# #install.packages("leaps")
# library(leaps)
# best_model <- regsubsets(wage_eur ~ ., football_data_sub, nvmax = 19)

```
